/**
 * skylark-domx-plugins-players - A  ui library for rendering various media data specified by mime-type.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["skylark-langx","skylark-domx-styler","skylark-domx-noder","skylark-domx-eventer","skylark-domx-query","skylark-domx-plugins-base","./players"],function(e,t,o,u,i,l,m){"use strict";var s=l.Plugin.inherit({klassName:"VolumeControl",pluginName:"domx.players.volume_control",options:{selectors:{volumeButton:".volume-button",volumeIcons:".volume-button use",volumeMute:'use[href="#volume-mute"]',volumeLow:'use[href="#volume-low"]',volumeHigh:'use[href="#volume-high"]',volume:".volume"}},_construct:function(e,t){l.Plugin.prototype._construct.call(this,e,t),this._media=this.options.media;let o=this.$(),u=this.options.selectors,i=this._media=this.options.media;this.$volumeButton=o.find(u.volumeButton),this.$volumeIcons=o.find(u.volumeIcons),this.$volumeMute=o.find(u.volumeMute),this.$volumeLow=o.find(u.volumeLow),this.$volumeHigh=o.find(u.volumeHigh),this.$volume=o.find(u.volume),this.listenTo(i,"volumechange",this.updateVolumeIcon),this.listenTo(this.$volume,"input",this.updateVolume),this.listenTo(this.$volumeButton,"click",this.toggleMute),this.updateVolumeIcon()},updateVolume:function(){this._media.muted()&&this._media.muted(!1),this._media.volume(this.$volume.val())},updateVolumeIcon:function(){this.$volumeIcons.forEach(e=>{i(e).hide()}),this.$volumeButton.data("title","Mute (m)"),this._media.muted()||0===this._media.volume()?(this.$volumeMute.show(),this.$volumeButton.data("title","Unmute (m)")):this._media.volume()>0&&this._media.volume()<=.5?this.$volumeLow.show():this.$volumeHigh.show()},toggleMute:function(){this._media.muted(!this._media.muted()),this._media.muted()?(this.$volume.data("volume",this.$volume.val()),this.$volume.val(0)):this.$volume.val(this.$volume.data("volume"))}});return l.register(s),m.VolumeControl=s});
//# sourceMappingURL=sourcemaps/volume-control.js.map
