{"version":3,"sources":["progress-control.js"],"names":["define","langx","styler","noder","eventer","$","plugins","players","ProgressControl","Plugin","inherit","klassName","pluginName","options","selectors","progressBar","seek","seekTooltip","_construct","elm","prototype","call","this","$el","$media","_media","media","$progressBar","find","$seek","$seekTooltip","listenTo","updateProgress","updateSeekTooltip","skipAhead","updateDuration","formatTime","timeInSeconds","result","Date","toISOString","substr","minutes","seconds","duration","Math","round","attr","currentTime","floor","val","event","skipTo","offsetX","target","clientWidth","parseInt","getAttribute","t","text","pos","pagePosition","css","pageX","left","dataset","value","register"],"mappings":";;;;;;;AAAAA,QACE,gBACA,sBACA,qBACA,uBACA,qBACA,4BACA,aACA,SAASC,EAAMC,EAAOC,EAAOC,EAAQC,EAAIC,EAAQC,GACjD,aAEA,IAAIC,EAAkBF,EAAQG,OAAOC,SACnCC,UAAY,kBAEZC,WAAa,gCAEbC,SACEC,WACEC,YAAc,gBACdC,KAAO,QACPC,YAAc,kBAKlBC,WAAY,SAASC,EAAKN,GACxBP,EAAQG,OAAOW,UAAUF,WAAWG,KAAKC,KAAKH,EAAIN,GAElD,IAAIU,EAAMD,KAAKjB,IACXS,EAAYQ,KAAKT,QAAQC,UACzBU,EAASF,KAAKG,OAASH,KAAKT,QAAQa,MAGxCJ,KAAKK,aAAeJ,EAAIK,KAAKd,EAAUC,aACvCO,KAAKO,MAAQN,EAAIK,KAAKd,EAAUE,MAChCM,KAAKQ,aAAeP,EAAIK,KAAKd,EAAUG,aAGvCK,KAAKS,SAASP,EAAO,aAAaF,KAAKU,gBACvCV,KAAKS,SAAST,KAAKO,MAAM,YAAYP,KAAKW,mBAC1CX,KAAKS,SAAST,KAAKO,MAAM,QAAQP,KAAKY,WAEtCZ,KAAKS,SAASP,EAAO,iBAAiBF,KAAKa,iBAM7CC,WAAa,SAAUC,GACrB,MAAMC,EAAS,IAAIC,KAAqB,IAAhBF,GAAsBG,cAAcC,OAAO,GAAI,GAEvE,OACEC,QAASJ,EAAOG,OAAO,EAAG,GAC1BE,QAASL,EAAOG,OAAO,EAAG,KAM9BN,eAAiB,WAChB,IAAIT,EAAQJ,KAAKG,OAChB,MAAMmB,EAAWC,KAAKC,MAAMpB,EAAMkB,YAClCtB,KAAKO,MAAMkB,KAAK,MAAOH,GACvBtB,KAAKK,aAAaoB,KAAK,MAAOH,IAMhCZ,eAAiB,WACjB,IAAIN,EAAQJ,KAAKG,OAClBuB,EAAcH,KAAKI,MAAMvB,EAAMsB,eAC3B1B,KAAKO,MAAMqB,IAAIF,GACf1B,KAAKK,aAAauB,IAAIF,IAMzBf,kBAAoB,SAAUkB,GAC5B,MAAMC,EAASP,KAAKC,MACjBK,EAAME,QAAUF,EAAMG,OAAOC,YAC5BC,SAASL,EAAMG,OAAOG,aAAa,OAAQ,KAE/CnC,KAAKO,MAAMkB,KAAK,OAAQK,GACxB,MAAMM,EAAIpC,KAAKc,WAAWgB,GAC1B9B,KAAKQ,aAAa6B,QAAQD,EAAEhB,WAAWgB,EAAEf,WAEzC,MAAMiB,EAAMtC,KAAKG,OAAOoC,eACxBvC,KAAKQ,aAAagC,IAAI,UAAWX,EAAMY,MAAQH,EAAII,WAKrD9B,UAAY,SAAUiB,GACpB,MAAMC,EAASD,EAAMG,OAAOW,QAAQjD,KAChCmC,EAAMG,OAAOW,QAAQjD,KACrBmC,EAAMG,OAAOY,MAEL5C,KAAKG,OACXuB,YAAYI,GAClB9B,KAAKK,aAAauB,IAAIE,GACtB9B,KAAKO,MAAMqB,IAAIE,MAQnB,OAFA9C,EAAQ6D,SAAS3D,GAEVD,EAAQC,gBAAkBA","file":"../progress-control.js","sourcesContent":["define([\r\n  \"skylark-langx\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./players\"\r\n],function(langx,styler,noder, eventer,$ , plugins,players) {\r\n  'use strict'\r\n\r\n  var ProgressControl = plugins.Plugin.inherit({\r\n    klassName : \"ProgressControl\",\r\n\r\n    pluginName : \"domx.players.progress_control\",\r\n   \r\n    options : {\r\n      selectors : {\r\n        progressBar : '.progress-bar',\r\n        seek : '.seek',\r\n        seekTooltip : '.seek-tooltip'\r\n      }\r\n    },\r\n\r\n\r\n    _construct: function(elm, options) {\r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      let $el = this.$(),\r\n          selectors = this.options.selectors,\r\n          $media = this._media = this.options.media;\r\n\r\n\r\n      this.$progressBar = $el.find(selectors.progressBar);\r\n      this.$seek = $el.find(selectors.seek);\r\n      this.$seekTooltip = $el.find(selectors.seekTooltip);\r\n\r\n      // Add eventlisteners here\r\n      this.listenTo($media,'timeupdate',this.updateProgress);\r\n      this.listenTo(this.$seek,'mousemove',this.updateSeekTooltip);\r\n      this.listenTo(this.$seek,'input',this.skipAhead);\r\n\r\n      this.listenTo($media,'loadedmetadata',this.updateDuration);\r\n\r\n    },\r\n\r\n    // formatTime takes a time length in seconds and returns the time in\r\n    // minutes and seconds\r\n    formatTime : function (timeInSeconds) {\r\n      const result = new Date(timeInSeconds * 1000).toISOString().substr(11, 8);\r\n\r\n      return {\r\n        minutes: result.substr(3, 2),\r\n        seconds: result.substr(6, 2),\r\n      };\r\n    },\r\n\r\n    // initializeVideo sets the video duration, and maximum value of the\r\n    // progressBar\r\n    updateDuration : function () {\r\n    \tvar media = this._media;\r\n     \tconst duration = Math.round(media.duration());    \t\t\r\n     \tthis.$seek.attr('max', duration);\r\n     \tthis.$progressBar.attr('max', duration);\r\n    },\r\n\r\n\r\n    // updateProgress indicates how far through the video\r\n    // the current playback is by updating the progress bar\r\n    updateProgress : function () {\r\n\t\t  var media = this._media,\r\n\t\t\tcurrentTime = Math.floor(media.currentTime());\r\n      \tthis.$seek.val(currentTime);\r\n      \tthis.$progressBar.val(currentTime);\r\n    },\r\n\r\n    // updateSeekTooltip uses the position of the mouse on the progress bar to\r\n    // roughly work out what point in the video the user will skip to if\r\n    // the progress bar is clicked at that point\r\n    updateSeekTooltip : function (event) {\r\n      const skipTo = Math.round(\r\n        (event.offsetX / event.target.clientWidth) *\r\n          parseInt(event.target.getAttribute('max'), 10)\r\n      );\r\n      this.$seek.attr('seek', skipTo);\r\n      const t = this.formatTime(skipTo);\r\n      this.$seekTooltip.text(`${t.minutes}:${t.seconds}`);\r\n      //const rect = this._media.getBoundingClientRect();\r\n      const pos = this._media.pagePosition();\r\n      this.$seekTooltip.css(\"left\", `${event.pageX - pos.left}px`);\r\n    },\r\n\r\n    // skipAhead jumps to a different point in the video when the progress bar\r\n    // is clicked\r\n    skipAhead : function (event) {\r\n      const skipTo = event.target.dataset.seek\r\n        ? event.target.dataset.seek\r\n        : event.target.value;\r\n\r\n      let media = this._media;\r\n      media.currentTime(skipTo);\r\n      this.$progressBar.val(skipTo);\r\n      this.$seek.val(skipTo);\r\n    },\r\n\r\n\r\n  });\r\n\r\n  plugins.register(ProgressControl);\r\n\r\n  return players.ProgressControl = ProgressControl;\r\n});"]}